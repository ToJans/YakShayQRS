{"name":"YakShayQRS","body":"### Welcome to project YakShayQRS\r\n\r\nThis project used to be called [MinimalisticCQRS](https://github.com/ToJans/MinimalisticCQRS/), but has evolved into YakShayQRS.\r\n\r\nThe name is a reference to the commonly know term Yak Shaving (i.e. doing things that in \r\nessence are not necessary to reach your goal).\r\n\r\nIt is a CQRS example that supports both the conventional way of applying events/commands :\r\n\r\n    public class AccountRegistered\r\n    {\r\n       public string OwnerName {get;set;}\r\n       public string AccountNumber {get;set;}\r\n       public string AccountId {get;set;}\r\n    }\r\n\r\n    Apply(new AccountRegistered {\r\n      OwnerName = \"Tom Janssens\",\r\n      AccountNumber=\"123-456789-01\",\r\n      AccountId=\"account/1\"\r\n    });\r\n\r\nor through method calls (without event or command classes classes, using dynamic dispatching):\r\n\r\n\r\n    ApplyEvent.AccountRegistered(\r\n       OwnerName: \"Tom Janssens\",\r\n       AccountNumber: \"123-456789-01\",\r\n       AccountId: \"account/1\"\r\n    );\r\n\r\nThis allows you to use messaging without explicitly declaring message classes....\r\n\r\n### Disclaimer\r\nHandle with care, as it might just as well blow up in your face !!!","tagline":"Yak Shaving CQRS - Architectural masturbation","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}